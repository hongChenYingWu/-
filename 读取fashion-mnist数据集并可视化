import torch
import torchvision
from torch.utils import data
from torchvision import transforms
from matplotlib import pyplot as plt
trans=transforms.ToTensor()
#通过ToTensor实例将数据从PIL类型变换成32位浮点数格式
mnist_train=torchvision.datasets.FashionMNIST(
    root="./",train=True,transform=trans,download=True)
mnist_test=torchvision.datasets.FashionMNIST(
    root="./",train=False,transform=trans,download=True)
def get_fashion_mnist_labels(labels):
    """返回Fashion-Mnist数据集的文本标签"""
    text_labels=['t-shirt','trouser','pullover','dress','coat',
                 'sandal','shirt','sneaker','bag','ankle boot']
    return [text_labels[int(i)] for i in labels]

def show_images(imgs,num_rows,num_cols,titles=None,scale=1.5):
    """plot a list of images"""
    figsize=(num_cols*scale,num_rows*scale)
    _,axes=plt.subplots(num_rows,num_cols,figsize=figsize)
    axes=axes.flatten()
    for i,(ax,img) in enumerate(zip(axes,imgs)):
        if torch.is_tensor(img):
            #图片张量
            ax.imshow(img.numpy())
        else:
            #PIL图片
            ax.imshow(img)
        ax.axes.get_xaxis().set_visible(False)
        ax.axes.get_yaxis().set_visible(False)
        if titles:
            ax.set_title(titles[i])
    return axes

x,y=next(iter(data.DataLoader(mnist_train,batch_size=18)))
show_images(x.reshape(18,28,28),2,9,titles=get_fashion_mnist_labels(y))
plt.show()
