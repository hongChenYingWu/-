import torchvision
from torch.utils import data
from torchvision import transforms

batch_size=256
def get_dataloader_workers():
    """使用2个进程来读取数据"""
    return 2
def load_data_fashion_mnist(batch_size,resize=None):
    """下载Fashion-MNIST数据集，然后将其加载到内存中"""
    trans=[transforms.ToTensor()]
    if resize:
        trans.insert(0,transforms.Resize(resize))
    trans=transforms.Compose(trans)
    mnist_train = torchvision.datasets.FashionMNIST(
        root="./", train=True, transform=trans, download=True)
    mnist_test = torchvision.datasets.FashionMNIST(
        root="./", train=False, transform=trans, download=True)
    return (data.DataLoader(mnist_train, batch_size, shuffle=True,
    num_workers=get_dataloader_workers()),data.DataLoader(mnist_test, batch_size, shuffle=True,
    num_workers=get_dataloader_workers()))

if __name__ == "__main__":
    train_iter,test_iter=load_data_fashion_mnist(32,resize=64)
    for x,y in train_iter:
        print(x.shape,x.dtype,y.shape,y.dtype)
        break
